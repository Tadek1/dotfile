# use C-s as the tmux {prefix}
unbind C-b 
set -g prefix C-s
bind-key -r C-s send-prefix

bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"


# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l
     
set-option -g default-terminal "screen-256color"
# status line setup
set-option -g status-left-length 50
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'
set-option -g status-right "Mouse #{?mouse,ON,OFF}   #(date '+%a, %b %d - %I:%M') "

bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'

# Fine size adjustement (note: no {prefix} required)
#
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
# Coarse size adjustement (note: no {prefix} required)
#
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# Zooming toogle
# default
# {prefix} z
#
# Windows
# -------
# Creating new Window
bind c new-window -c "#{pane_current_path}"

set -s escape-time 0
# Window Navigation
set -g base-index 1        # start window numbering at 1 set -g renumber-windows on # renumber windows as they are created desroyed # default navigation {prefix}{n} 
# Break a Pane Out to s New Window
#
bind-key b break-pane -d
#
# Session Navigation
bind-key C-j choose-tree

# Toggle mouse on with <prefix>M
bind m set -g mouse \;  display "Mouse #{?mouse,ON,OFF}"
#
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M
#bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
#bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
#bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
#bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
#bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down
#
## To copy, left click and drag to highlight text in yellow, 
## # once you release left click yellow text will disappear and will automatically be available in clibboard
## # Use vim keybindings in copy mode
#setw -g mode-keys vi
## Update default binding of `Enter` to also use copy-pipe
#unbind -T copy-mode-vi Enter
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -selection c"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
#
#
